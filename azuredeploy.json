{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Azure Storage Account to create."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "CentralUS",
      "metadata": {
        "description": "The Azure region for the storage account."
      }
    },
    "containerName": {
      "type": "string",
      "defaultValue": "web",
      "metadata": {
        "description": "The name of the container to host the website files."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-09-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "allowBlobPublicAccess": true,
        "staticWebsite": {
          "enabled": true,
          "indexDocument": "index.html",
          "errorDocument404Path": "404.html"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2018-02-01",
      "name": "[substring(format('{0}/default/{1}', parameters('storageAccountName'), parameters('containerName')), 0, 63)]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ],
      "properties": {
        "publicAccess": "Blob"
      }
    },
    {
      "type": "Microsoft.Resources/deploymentScripts",
      "kind": "AzurePowerShell",
      "apiVersion": "2020-10-01",
      "name": "uploadStaticWebsiteFiles",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', parameters('storageAccountName'), 'default', parameters('containerName'))]"
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', format('{0}/default/{1}', parameters('storageAccountName'), parameters('containerName')))]"
      ],
      "properties": {
        "azPowerShellVersion": "2.5.0",
        "scriptContent": "param([string] $storageAccountName, [string] $containerName)\n$ErrorActionPreference = 'Stop'\n$storageAccountKey = (Get-AzStorageAccountKey -ResourceGroupName $env:RESOURCE_GROUP_NAME -Name $storageAccountName).Value[0]\n$context = New-AzStorageContext -StorageAccountName $storageAccountName -StorageAccountKey $storageAccountKey\n$localPath = 'client'\n$files = Get-ChildItem -Recurse -File -Path $localPath\nforeach ($file in $files) {\n    $relativePath = $file.FullName.Substring($localPath.Length + 1).Replace('\\', '/')\n    Set-AzStorageBlobContent -File $file.FullName -Container $containerName -Blob $relativePath -Context $context\n}",
        "arguments": "[parameters('storageAccountName')] [parameters('containerName')]",
        "cleanupPreference": "OnSuccess",
        "retentionInterval": "P1D",
        "forceUpdateTag": "1"
      }
    }
  ],
  "outputs": {
    "staticWebsiteUrl": {
      "type": "string",
      "value": "[format('https://{0}.z13.web.core.windows.net', parameters('storageAccountName'))]"
    }
  }
}
